.container {
  display: flex;
  flex-direction: column;
  width: 100vw;
  height: 100vh;
  padding: 10px;
}

/* SCORE */
.score {
  display: flex;
  justify-content: center;
}
.score__sign {
  position: relative;
  width: fit-content;
  margin-right: 40px;
  margin-bottom: 20px;
  font: 700 36px 'Tilt Prism';
}
.score__value {
  position: absolute;
  right: -60px;
  transform: translateY(-50%);
  top: 50%;
  font: 400 34px 'Orbitron', sans-serif;
  color: var(--accent-prime);
}

.game {
  display: flex;
  margin: 0 auto;
}

/* LEFT */
.game__left,
.game__right {
  position: relative;
  width: 80px;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 50px;
}
.game__left {
  padding-right: 10px;
}

/* dimension */
.dimension {
  padding: 10px;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 5px;
  background-color: var(--text);
  border-radius: 20px;
}
label[for='dimension'] {
  color: var(--text-second);
  background-color: var(--text);
  font: 400 16px/2 'Orbitron';
}
label[for='dimension'] > span {
  position: relative;
  font: 400 20px 'Croissant One';
  top: 2px;
}

#dimension {
  width: 44px;
  height: 30px;
  padding-left: 8px;
  border-radius: 8px;
  border: solid 1px var(--text);
  color: var(--text-second);
  font: 400 16px 'Orbitron';
}

/* change images */
.change-images {
  position: relative;
  display: flex;
  justify-content: center;
  border-radius: 5px;
}
.change-images::before {
  content: url(../assets/images/img.png);
  position: absolute;
  transform: scale(0.55) translateY(-4px);
  z-index: -1;
}

#change {
  display: none;
}

label:has(~ #change) {
  color: var(--accent-second);
  transition: transform 0.5s linear;
}
/* label:has(~ #change:checked) {
  color: var(--accent-prime);
} */
label:has(~ #change):hover {
  cursor: pointer;
  filter: saturate(2);
  animation: rotate 1s infinite;
}

.hammer__btn {
  position: relative;
  border: none;
}
.on-hammer-btn.hammer__btn:enabled svg {
  animation: shake-rotate 1s linear infinite;
}

.hammer__btn:enabled svg:hover {
  cursor: pointer;
  animation: shake-rotate 1s linear infinite;
}
.on-hammer-btn.hammer__btn:enabled svg:hover {
  animation: none;
}

.hammer__count {
  position: absolute;
  right: 0;
  top: 0;
  color: var(--accent-prime);
  font: 0.8rem Orbitron;
}
.hammer__score {
  position: absolute;
  left: 0;
  bottom: 0;
  color: var(--accent-prime);
  font: 0.6rem Orbitron;
}

.hammer__btn:enabled .hammer__count {
  animation: breath 1s linear infinite;
}

/* RIGHT */
.game__right {
  padding-left: 10px;
}
/* new game button */
.ng-button {
  padding: 10px;
  border: none;
  border-radius: 20px;
  font: 900 18px 'Tilt Prism';
  color: var(--text-second);
  transition: filter 0.3s linear;

  background-color: var(--accent-second);
}
.ng-button:hover {
  cursor: pointer;
  filter: saturate(10);
}

/* table button */
.table-button {
  border: none;
}

.on-button:hover {
  cursor: url('../assets/images/hammer.svg'), crosshair;
  animation: breath 1s linear infinite;
}

.on-hammer-btn {
  --hammer-color: var(--accent-prime);
}

.table-button:hover svg {
  cursor: pointer;
  --color-table-prime: #ec310c;
  --color-table-second: #82f524;
}

/* AREA */
#area {
  position: relative;

  /* outline: 3px solid blue; */
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  border-radius: 10px;
}

.area__item {
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 10px;
  margin-left: 10px;
  margin-top: 10px;
  opacity: 0.9;
  transition: all 0.1s linear;
}
.area__value {
  color: white;
}

.good-luck {
  animation: breath 1s linear infinite;
  font: 2rem 'Croissant One';
}
